// <auto-generated />
using System;
using FilmRentalAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FilmRentalAPI.Migrations
{
    [DbContext(typeof(FilmRentalAPIDbContext))]
    [Migration("20210408122814_SecondCreate")]
    partial class SecondCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ActorFilm", b =>
                {
                    b.Property<int>("ActorsActorID")
                        .HasColumnType("int");

                    b.Property<int>("FilmsFilmID")
                        .HasColumnType("int");

                    b.HasKey("ActorsActorID", "FilmsFilmID");

                    b.HasIndex("FilmsFilmID");

                    b.ToTable("ActorFilm");
                });

            modelBuilder.Entity("FilmRentalAPI.Models.Actor", b =>
                {
                    b.Property<int>("ActorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MostPopularFilm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActorID");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            ActorID = 1,
                            DateOfBirth = "1943-08-17",
                            FirstName = "Robert",
                            LastName = "De Niro",
                            MostPopularFilm = "The Intern"
                        },
                        new
                        {
                            ActorID = 2,
                            DateOfBirth = "1954-12-18",
                            FirstName = "Ray",
                            LastName = "Liotta",
                            MostPopularFilm = "GoodFellas"
                        },
                        new
                        {
                            ActorID = 3,
                            DateOfBirth = "1958-10-20",
                            FirstName = "Viggo",
                            LastName = "Mortensen",
                            MostPopularFilm = "Lord Of The Rings"
                        });
                });

            modelBuilder.Entity("FilmRentalAPI.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 63490)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FilmRentalAPI.Models.Film", b =>
                {
                    b.Property<int>("FilmID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 6)
                        .HasAnnotation("SqlServer:IdentitySeed", 2539)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FilmDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.HasKey("FilmID");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("FilmRentalAPI.Models.Rent", b =>
                {
                    b.Property<int>("RentalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 3)
                        .HasAnnotation("SqlServer:IdentitySeed", 3455)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("FilmID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RentalID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("FilmID");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("ActorFilm", b =>
                {
                    b.HasOne("FilmRentalAPI.Models.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsActorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilmRentalAPI.Models.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmsFilmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmRentalAPI.Models.Rent", b =>
                {
                    b.HasOne("FilmRentalAPI.Models.Customer", "Customer")
                        .WithMany("Rents")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilmRentalAPI.Models.Film", "Film")
                        .WithMany("Rents")
                        .HasForeignKey("FilmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("FilmRentalAPI.Models.Customer", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("FilmRentalAPI.Models.Film", b =>
                {
                    b.Navigation("Rents");
                });
#pragma warning restore 612, 618
        }
    }
}
